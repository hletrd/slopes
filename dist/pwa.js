document.addEventListener("DOMContentLoaded",(function(){const e=document.getElementById("addToHomeButton"),t=document.getElementById("installationModal"),n=document.getElementById("closeModal"),o=document.getElementById("iOSInstructions"),i=document.getElementById("androidInstructions");let r;const d=/iPad|iPhone|iPod/.test(navigator.userAgent)&&!window.MSStream,a=window.matchMedia("(display-mode: standalone)").matches||window.navigator.standalone||document.referrer.includes("android-app://");d?(o.style.display="block",i.style.display="none"):(o.style.display="none",i.style.display="block"),!d&&!/Android/.test(navigator.userAgent)||a||(e.style.display="flex"),window.addEventListener("beforeinstallprompt",(t=>{t.preventDefault(),r=t,e.style.display="flex"})),e.addEventListener("click",(()=>{r?(r.prompt(),r.userChoice.then((t=>{"accepted"===t.outcome&&(console.log("User accepted the install prompt"),e.style.display="none"),r=null}))):t.style.display="block"})),n.addEventListener("click",(()=>{t.style.display="none"})),window.addEventListener("appinstalled",(t=>{e.style.display="none"}));const s=document.getElementById("infoButton"),l=document.getElementById("infoModal"),c=document.getElementById("closeInfoModal");if(s.addEventListener("click",(()=>{l.style.display="flex"})),c.addEventListener("click",(()=>{l.style.display="none"})),l.addEventListener("click",(e=>{e.target===l&&(l.style.display="none")})),"serviceWorker"in navigator){function p(){navigator.serviceWorker.getRegistration().then((e=>{e&&e.update().then((()=>{console.log("Service worker updated")})).catch((e=>{console.error("Service worker update failed:",e)}))}))}navigator.serviceWorker.register("/service-worker.js?v=4",{scope:"/"}).then((e=>{console.log("Service Worker registered with scope:",e.scope)})).catch((e=>{console.error("Service Worker registration failed:",e)}));let g=!1;if(navigator.serviceWorker.addEventListener("controllerchange",(()=>{g||(g=!0,console.log("Service worker updated, reloading page"),window.location.reload())})),p(),setInterval(p,36e5),a){const m=()=>{const e=document.createElement("div");e.className="update-notification",e.style.cssText="\n          position: fixed;\n          bottom: 20px;\n          left: 50%;\n          transform: translateX(-50%);\n          background-color: #4CAF50;\n          color: white;\n          padding: 10px 20px;\n          border-radius: 4px;\n          box-shadow: 0 2px 10px rgba(0,0,0,0.3);\n          z-index: 9999;\n          display: flex;\n          align-items: center;\n          justify-content: space-between;\n          min-width: 250px;\n          font-size: 14px;\n        ";const t=document.createElement("span");t.textContent="업데이트가 준비되었습니다.";const n=document.createElement("button");n.textContent="지금 적용",n.style.cssText="\n          background-color: white;\n          color: #4CAF50;\n          border: none;\n          padding: 5px 10px;\n          border-radius: 4px;\n          margin-left: 10px;\n          cursor: pointer;\n        ",n.addEventListener("click",(()=>{navigator.serviceWorker.getRegistration().then((e=>{e&&e.waiting&&e.waiting.postMessage({type:"SKIP_WAITING"})})),e.remove()})),e.appendChild(t),e.appendChild(n),document.body.appendChild(e)};navigator.serviceWorker.getRegistration().then((e=>{e&&(e.waiting&&m(),e.addEventListener("updatefound",(()=>{const t=e.installing;t.addEventListener("statechange",(()=>{"installed"===t.state&&navigator.serviceWorker.controller&&m()}))})))}))}}}));