const CACHE_NAME="slopes-cam-v4",urlsToCache=["./","./index.html","./main.css","./main.js","./pwa.js","./analytics.js","./manifest.json","./favicon.ico","./icons/skiing-16x16.png","./icons/skiing-32x32.png","./icons/skiing-64x64.png","./icons/skiing-128x128.png","./icons/skiing-180x180.png","./icons/skiing-192x192.png","./icons/skiing-512x512.png","./icons/skiing-maskable-192x192.png","./icons/skiing-maskable-512x512.png","./preview.png","./vivaldi.html","./WespJSSDKEncV4.min.js"],externalResources=["https://cdn.jsdelivr.net/npm/bootstrap@5.3.5/dist/css/bootstrap.min.css","https://cdn.jsdelivr.net/npm/video.js@8.23.3/dist/video-js.min.css","https://cdn.jsdelivr.net/npm/@videojs/themes@1/dist/forest/index.css","https://cdn.jsdelivr.net/gh/orioncactus/pretendard@v1.3.9/dist/web/variable/pretendardvariable-dynamic-subset.min.css","https://cdn.jsdelivr.net/npm/html2canvas@1.4.1/dist/html2canvas.min.js","https://cdn.jsdelivr.net/npm/video.js@8.23.3/dist/alt/video.novtt.min.js","https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.0/font/bootstrap-icons.min.css","https://buttons.github.io/buttons.js","https://www.googletagmanager.com/gtag/js"],isLocalhost="localhost"===self.location.hostname||"127.0.0.1"===self.location.hostname;self.addEventListener("install",(s=>{isLocalhost||s.waitUntil(caches.open(CACHE_NAME).then((s=>(console.log("Opened cache"),s.addAll(urlsToCache).then((()=>Promise.allSettled(externalResources.map((e=>fetch(e,{mode:"no-cors"}).then((t=>s.put(e,t))).catch((s=>{console.warn(`Failed to cache external resource: ${e}`,s)})))))))))))})),self.addEventListener("fetch",(s=>{if(isLocalhost)return;const e=new URL(s.request.url);e.hostname.includes("googletagmanager.com")||e.hostname.includes("google-analytics.com")||e.hostname.includes("ghbtns.com")||s.respondWith(caches.match(s.request).then((t=>t||fetch(s.request.clone()).then((t=>{if(!t||200!==t.status)return t;if(e.origin===self.location.origin||externalResources.includes(s.request.url)||s.request.url.endsWith(".json")||s.request.url.includes("font")||s.request.url.includes(".woff")||s.request.url.includes(".woff2")||s.request.url.endsWith(".css")||s.request.url.endsWith(".js")||s.request.url.endsWith(".png")||s.request.url.endsWith(".jpg")||s.request.url.endsWith(".svg")||s.request.url.endsWith("/js")){const e=t.clone();caches.open(CACHE_NAME).then((t=>{t.put(s.request,e)}))}return t})).catch((e=>(console.log("Fetch failed:",e),caches.match(s.request)))))))})),self.addEventListener("activate",(s=>{const e=isLocalhost?[]:[CACHE_NAME];s.waitUntil(caches.keys().then((s=>Promise.all(s.map((s=>{if(-1===e.indexOf(s))return caches.delete(s)}))))))})),self.addEventListener("message",(s=>{s.data&&"SKIP_WAITING"===s.data.type&&self.skipWaiting()}));